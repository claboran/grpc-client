plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.9.25'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.google.protobuf' version '0.9.5'
}

group = 'de.laboranowitsch.poc'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    grpcVersion = '1.63.0'
    protobufVersion = '3.25.6'
    grpcSpringBootStarterVersion = '3.1.0.RELEASE'
    grpcKotlinStubVersion = '1.4.1'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'

    // gRPC Server dependencies (using grpc-spring-boot-starter)
    implementation "net.devh:grpc-client-spring-boot-starter:${grpcSpringBootStarterVersion}"
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation "io.grpc:grpc-kotlin-stub:${grpcKotlinStubVersion}"
    runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}" // Runtime for Netty

    // Protobuf Kotlin runtime
    implementation "com.google.protobuf:protobuf-kotlin:${protobufVersion}"

    // For @PostConstruct / @PreDestroy if needed later
    implementation "jakarta.annotation:jakarta.annotation-api:3.0.0"

    // Kotlin Coroutines support
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.10.2"

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
        grpckt { // Add the grpc-kotlin plugin
            artifact = "io.grpc:protoc-gen-grpc-kotlin:${grpcKotlinStubVersion}:jdk8@jar" // jdk8 classifier for coroutine support
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                grpc {}
                grpckt {} // Add the Kotlin plugin
            }
            task.builtins {
                kotlin {} // Generate Kotlin code alongside Java
            }
        }
    }
}

// Ensure generated sources are added to the source set
sourceSets {
    main {
        proto {
            srcDir "src/main/proto" // Location of your .proto files
        }
        kotlin {
            // Include generated Kotlin code
            srcDir "build/generated/source/proto/main/kotlin"
            srcDir "build/generated/source/proto/main/grpckt"
        }
        // java has been removed
    }
}

tasks.withType(Copy).configureEach {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

kotlin {
    compilerOptions {
        freeCompilerArgs.addAll '-Xjsr305=strict'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

apply plugin: 'org.jetbrains.kotlin.plugin.spring'
